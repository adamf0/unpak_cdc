version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper
    networks:
      - minio-sample

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    ports:
      - "9092:9092"
      - "29092:29092"
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1  # ✅ fix
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1             # ✅ fix
    volumes:
      - /kafka-data:/var/lib/kafka
    networks:
      - minio-sample

  debezium:
    image: debezium/connect:3.0.0.Final
    ports:
      - "8083:8083"
      - "5005:5005"
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_config
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_status
      CONNECT_TOPIC_CREATION_ENABLE: "true"
    volumes:
      - ./debezium/connectors:/kafka/connectors
      - ./debezium/auto-setup.sh:/kafka/auto-setup.sh
    command: ["/bin/bash", "-c", "/docker-entrypoint.sh start & sleep 15 && chmod +x /kafka/auto-setup.sh && /kafka/auto-setup.sh && wait"]
    depends_on:
      - kafka
    networks:
      - minio-sample

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx128M"
    depends_on:
      - kafka
    networks:
      - minio-sample

volumes:
  zookeeper-data:
  kafka-data:
  mysql1-data:
  mysql2-data:

networks:
  minio-sample:
    driver: bridge
